#BlueJ class context
comment0.target=TextBox
comment0.text=\r\n\ A\ modular\ widget\ that\ can\ get\ input\ from\ user\ (if\ needed)\ or\ take\ string\ output\ and\ display\ it\ to\ the\ World\ using\ a\ text\ box.\r\n\ This\ widget\ can\ be\ customized\ to\ show\ text\ of\ any\ width\ and\ height,\ with\ any\ specified\ background\ and\ text\ colour.\ \r\n\ It\ can\ be\ of\ any\ font\ size\ and\ font\ type,\ and\ be\ centered\ or\ left\ aligned,\ and\ can\ have\ any\ amount\ of\ initial\ text.\ \r\n\ Displayed\ text\ can\ be\ either\ added\ on\ all\ in\ one\ go,\ or\ slowly\ updated\ using\ the\ curOutput\ variable.\ \r\n\ MaxLines\ is\ initialized\ so\ that\ the\ text\ lines\ do\ not\ exceed\ the\ borders\ of\ the\ text\ box.\ \r\n\ Note\:\ Some\ values\ must\ be\ experimented\ with,\ meaning\ there\ is\ no\ definite\ value\ for\ them.\ \r\n\ Certain\ values\ indicated\ in\ the\ constructors\ (character\ size\ and\ height)\ will\ change\ when\ the\ font\ changes.\ \r\n\ <p>\r\n\ Constructors\:\ \r\n\ This\ class\ aims\ to\ be\ as\ flexible\ as\ possible,\ allowing\ it\ to\ have\ simple\ constructors\ (0\ or\ 2\ parameters),\ \r\n\ all\ the\ way\ to\ a\ fully\ customizable\ text\ box\ with\ 12\ parameters\r\n\ However,\ more\ complex\ constructors\ will\ require\ a\ more\ advanced\ knowledge\ of\ the\ text\ displayed\ in\ the\ text\ box\ and\ parameters\r\n\ By\ allowing\ customizable\ changes,\ it\ allows\ the\ class\ to\ become\ modular\r\n\ <p>\r\n\ Implementation\:\ \r\n\ If\ wanting\ to\ implement\ a\ simple\ textbox,\ it\ is\ highly\ recommended\ to\ use\ the\ simple\ constructors.\ \r\n\ Otherwise,\ use\ the\ longer\ customizable\ constructors.\ \r\n\ <p>\r\n\ Methods\:\ \r\n\ Methods\ can\ be\ used\ to\ update\ text,\ parse\ text,\ display\ text,\ get\ lines\ of\ text,\ etc.\ \r\n\ See\ each\ method\ for\ its\ corresponding\ documentation.\ \r\n\ Update\ method\ is\ overloaded\ depending\ on\ the\ parameters\ used\ (see\ method\ for\ details).\ \r\n\ GetStringWidth\ method\ is\ very\ CPU\ intensive,\ so\ use\ the\ centering\ text\ methods\ sparingly.\ \r\n\ <p>\r\n\ Notes\:\ \r\n\ When\ using\ typing\ animation\ methods\ of\ text\ box,\ curOutput\ changes\ while\ lastOutput\ is\ stored\ and\ outputText\ remains\ the\ same.\ \r\n\ Centering\ text\ may\ be\ memory\ intensive,\ so\ use\ that\ method\ sparingly.\ \r\n\ For\ simulating\ typing\ commands,\ make\ sure\ the\ current\ output\ and\ text\ output\ are\ the\ same\ before\ continuing\ to\ the\ next\ command\ \r\n\ (use\ the\ stopTyping\ method).\r\n\ \r\n\ @author\ Jerry\ Zhu,\ Jordan\ Cohen\r\n\ @version\ 1\r\n
comment1.params=
comment1.target=TextBox()
comment1.text=\r\n\ Main\ constructor\ -\ A\ basic\ constructor\ that\ sets\ default\ values;\ easy\ to\ use\ but\ not\ very\ flexible.\r\n\ <p>\r\n\ Creates\ a\ TextBox\ of\ white\ text\ on\ a\ black\ background\ that\ takes\ up\ an\ 800\ by\ 560\ pixels\ screen,\ \r\n\ with\ size\ 25\ Times\ New\ Roman\ font.\ \r\n
comment10.params=stop
comment10.target=void\ update(java.lang.String)
comment10.text=\r\n\ Overloaded\ method\ that\ updates\ the\ current\ output\ to\ match\ the\ entire\ output\ text\ while\ taking\ in\ keyboard\ input.\ \r\n\ This\ method\ takes\ in\ Greenfoot\ user\ input\ rather\ than\ regular\ String\ input\r\n\ @param\ stop\ \ \ \ Delimiter\ to\ stop\ the\ user\ input\r\n
comment11.params=font\ text
comment11.target=int\ getStringWidth(greenfoot.Font,\ java.lang.String)
comment11.text=\r\n\ <p>Get\ the\ width\ of\ a\ String,\ if\ it\ was\ printed\ out\ using\ the\ drawString\ command\ in\ a\ particular\r\n\ Font.\ This\ is\ not\ a\ cheap\ method,\ and\ should\ not\ be\ called\ from\ an\ act\ method.\ It\ is\ appropriate\r\n\ to\ call\ this\ in\ the\ constructor.</p>\r\n\ \r\n\ <p>In\ advanced\ cases,\ you\ may\ want\ to\ cache\ the\ results\ during\ a\ loading\ method.\ You\ could\ also\r\n\ call\ it\ manually\ while\ coding,\ not\ the\ results,\ and\ use\ literal\ values\ to\ avoid\ having\ this\r\n\ code\ called\ at\ all.</p>\r\n\ \r\n\ <h3>Performance\ &\ Compatibility\:</h3>\r\n\ <ul>\r\n\ \ <li>\ Locally,\ performance\ should\ be\ sufficient\ on\ any\ moderate\ computer\ (average\ call\ 0.4ms\ on\ my\ laptop)</li>\r\n\ \ <li>\ To\ be\ compatible\ with\ Greenfoot\ Gallery,\ removed\ use\ of\ getAwtImage()\ and\ replaced\ with\ getColorAt()\ on\ a\ GreenfootImage</li>\r\n\ \ <li>\ On\ Gallery,\ performance\ is\ about\ 10x\ slower\ than\ locally\ (4ms\ on\ Gallery\ via\ Computer).\ For\ reference,\ an\ act()\ should\ be\r\n\ \ \ \ \ \ \ less\ than\ 16.6ms\ to\ maintain\ 60\ frames/acts\ per\ second.\ </li>\r\n\ \ <li>\ HUGE\ performance\ drop\ on\ Gallery\ via\ Mobile\ devices\ -\ not\ sure\ why,\ going\ to\ ignore\ for\ now\ </li>\r\n\ </ul>\r\n\ \r\n\ @param\ font\ the\ GreenFoot.Font\ which\ is\ being\ used\ to\ draw\ text\r\n\ @param\ text\ the\ actual\ text\ to\ be\ drawn\r\n\ @return\ int\ \ the\ width\ of\ the\ String\ text\ as\ draw\ in\ Font\ font,\ in\ pixels.\r\n\ \r\n\ @author\ Jordan\ Cohen,\ Jerry\ Zhu\r\n\ @since\ June\ 2021\r\n\ @version\ November\ 2021\ -\ Edited\ Mr.Cohen's\ version\ for\ my\ text\ box\ class\r\n
comment12.params=
comment12.target=void\ simulateType()
comment12.text=\r\n\ Simulate\ typing\ of\ text\ in\ the\ text\ box\ on\ the\ screen.\ \r\n\ Called\ in\ the\ World\ whenever\ the\ text\ should\ be\ updated\ by\ a\ character.\ \r\n\ Includes\ the\ ability\ to\ incorporate\ animation\ frames.\ \r\n
comment13.params=finishedPress
comment13.target=void\ setFinishedPress(boolean)
comment13.text=\r\n\ Setter\ method\ to\ set\ the\ finishedPress\ value\ of\ whether\ the\ enter\ key\ is\ pressed\ or\ not.\r\n\ @param\ finishedPress\ \ \ whether\ the\ enter\ key\ has\ been\ pressed\ yet\r\n
comment14.params=
comment14.target=boolean\ getFinishedPress()
comment14.text=\r\n\ Getter\ method\ to\ check\ whether\ the\ delimiter\ key\ is\ pressed\ or\ not.\ \r\n\ @return\ boolean\ \ \ the\ result\ of\ whether\ the\ enter\ key\ has\ been\ pressed\ or\ not\r\n
comment15.params=
comment15.target=boolean\ stopTyping()
comment15.text=\r\n\ Method\ that\ checks\ to\ see\ if\ the\ text\ displayed\ matches\ the\ entire\ text.\r\n\ @return\ boolean\ \ \ if\ the\ current\ output\ equals\ the\ output\ text\r\n
comment16.params=
comment16.target=java.lang.String\ getOutput()
comment16.text=\r\n\ Get\ the\ total\ output\ text.\ \r\n\ @return\ String\ \ \ \ the\ corresponding\ text\ output\r\n
comment17.params=outputText
comment17.target=void\ setOutput(java.lang.String)
comment17.text=\r\n\ Set\ the\ total\ output\ text.\ \r\n\ @param\ outputText\ \ \ the\ corresponding\ output\ text\r\n
comment18.params=outputText
comment18.target=void\ addToOutput(java.lang.String)
comment18.text=\r\n\ Add\ to\ the\ total\ output\ text.\ \r\n\ @param\ outputText\ \ \ the\ text\ needed\ to\ be\ added\r\n
comment19.params=
comment19.target=java.lang.String\ getCurrent()
comment19.text=\r\n\ Get\ the\ current\ text\ displayed.\ \r\n\ @return\ String\ \ \ \ \ the\ current\ output\ text\r\n
comment2.params=width\ height
comment2.target=TextBox(int,\ int)
comment2.text=\r\n\ Similar\ to\ above,\ but\ with\ the\ ability\ to\ customize\ width\ and\ height.\ \r\n\ @param\ width\ \ \ \ \ the\ width\ of\ the\ text\ box\r\n\ @param\ height\ \ \ \ the\ height\ of\ the\ text\ box\r\n
comment20.params=curOutput
comment20.target=void\ setCurrent(java.lang.String)
comment20.text=\r\n\ Set\ the\ current\ text\ displayed.\ \r\n\ @param\ curOutput\ \ the\ current\ output\ text\r\n
comment21.params=
comment21.target=void\ checkLines()
comment21.text=\r\n\ Check\ if\ a\ lines\ needs\ to\ be\ deleted,\ and\ delete\ that\ line\ if\ neccesary.\ Update\ the\ arrayLists\ accordingly.\ \r\n
comment22.params=start\ end
comment22.target=java.util.ArrayList\ getLines(int,\ int)
comment22.text=\r\n\ Get\ the\ lines\ in\ an\ ArrayList\ from\ the\ indices\ [start,\ end]\ inclusive.\ \r\n\ @param\ start\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ start\ point\ to\ get\ lines\ from\ the\ ArrayList\ \r\n\ @param\ end\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ end\ point\ to\ get\ lines\ from\ the\ ArrayList\r\n\ @return\ ArrayList\ <String>\ \ an\ ArrayList\ of\ the\ required\ list\ of\ sentences\r\n
comment23.params=numOfLines
comment23.target=java.util.ArrayList\ getLastLines(int)
comment23.text=\r\n\ Get\ the\ last\ n\ lines\ in\ the\ text\ output\ returned\ in\ an\ ArrayList.\ \r\n\ @param\ numOfLines\ \ \ \ \ \ \ \ \ \ \ \ the\ number\ of\ lines\r\n\ @return\ ArrayList\ <String>\ \ \ an\ arraylist\ of\ the\ last\ numOfLines\ lines\r\n
comment24.params=
comment24.target=java.lang.String\ getLastLine()
comment24.text=\r\n\ Get\ the\ last\ line\ in\ the\ text\ output\r\n\ @return\ String\ \ \ \ \ the\ last\ line\ of\ the\ text\ output.\ \r\n
comment25.params=
comment25.target=void\ keepLastOutput()
comment25.text=\r\n\ Save\ the\ last\ output\ in\ a\ variable\ called\ lastOutput\r\n\ Used\ so\ that\ the\ backspace\ does\ not\ delete\ text\ that\ should\ not\ be\ deleted.\ \r\n
comment3.params=width\ height\ centered
comment3.target=TextBox(int,\ int,\ boolean)
comment3.text=\r\n\ Similar\ to\ above,\ but\ with\ the\ ability\ to\ customize\ left\ or\ center\ alignment.\ \r\n\ <p>\r\n\ Note\:\ Use\ this\ constructor\ sparingly,\ as\ centering\ text\ is\ very\ CPU\ intensive.\ \r\n\ @param\ width\ \ \ \ \ the\ width\ of\ the\ text\ box\r\n\ @param\ height\ \ \ \ the\ height\ of\ the\ text\ box\r\n\ @param\ centered\ \ whether\ the\ text\ is\ center\ aligned\r\n
comment4.params=width\ height\ bgR\ bgG\ bgB\ txtR\ txtG\ txtB
comment4.target=TextBox(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment4.text=\r\n\ Similar\ to\ above,\ but\ with\ the\ ability\ to\ customize\ background\ and\ text\ colour,\ with\ left\ alignment.\ \r\n\ <p>\r\n\ Note\:\ Make\ sure\ that\ the\ background\ colour\ complements\ the\ text\ colour\r\n\ @param\ width\ \ \ \ \ the\ width\ of\ the\ text\ box\r\n\ @param\ height\ \ \ \ the\ height\ of\ the\ text\ box\r\n\ @param\ bgR\ \ \ \ \ \ \ red\ parameter\ of\ the\ background\ colour\r\n\ @param\ bgG\ \ \ \ \ \ \ green\ parameter\ of\ the\ background\ colour\r\n\ @param\ bgB\ \ \ \ \ \ \ blue\ parameter\ of\ the\ background\ colour\r\n\ @param\ txtR\ \ \ \ \ \ red\ parameter\ of\ the\ text\ colour\r\n\ @param\ txtG\ \ \ \ \ \ green\ parameter\ of\ the\ text\ colour\r\n\ @param\ txtB\ \ \ \ \ \ blue\ parameter\ of\ the\ text\ colour\r\n
comment5.params=width\ height\ bgR\ bgG\ bgB\ txtR\ txtG\ txtB\ fontSize\ Font
comment5.target=TextBox(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ java.lang.String)
comment5.text=\r\n\ Similar\ to\ above,\ but\ with\ the\ ability\ to\ customize\ font\ type\ and\ font\ size.\ \r\n\ <p>\r\n\ Note\:\ Make\ sure\ that\ the\ background\ colour\ complements\ the\ text\ colour\r\n\ @param\ width\ \ \ \ \ the\ width\ of\ the\ text\ box\r\n\ @param\ height\ \ \ \ the\ height\ of\ the\ text\ box\r\n\ @param\ bgR\ \ \ \ \ \ \ red\ parameter\ of\ the\ background\ colour\r\n\ @param\ bgG\ \ \ \ \ \ \ green\ parameter\ of\ the\ background\ colour\r\n\ @param\ bgB\ \ \ \ \ \ \ blue\ parameter\ of\ the\ background\ colour\r\n\ @param\ txtR\ \ \ \ \ \ red\ parameter\ of\ the\ text\ colour\r\n\ @param\ txtG\ \ \ \ \ \ green\ parameter\ of\ the\ text\ colour\r\n\ @param\ txtB\ \ \ \ \ \ blue\ parameter\ of\ the\ text\ colour\r\n\ @param\ fontSize\ \ the\ font\ size\ of\ the\ text\r\n\ @param\ Font\ \ \ \ \ \ the\ specified\ font\ of\ the\ text\ box\r\n
comment6.params=width\ height\ bgR\ bgG\ bgB\ txtR\ txtG\ txtB\ fontSize\ Font\ centered
comment6.target=TextBox(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ java.lang.String,\ boolean)
comment6.text=\r\n\ Similar\ to\ above,\ but\ with\ the\ ability\ to\ customize\ center\ or\ left\ alignment.\ \r\n\ <p>\r\n\ Note\:\ Use\ this\ constructor\ sparingly,\ as\ centering\ text\ is\ very\ CPU\ intensive.\ \r\n\ <p>\r\n\ Note\:\ Make\ sure\ that\ the\ background\ colour\ complements\ the\ text\ colour\r\n\ @param\ width\ \ \ \ \ the\ width\ of\ the\ text\ box\r\n\ @param\ height\ \ \ \ the\ height\ of\ the\ text\ box\r\n\ @param\ bgR\ \ \ \ \ \ \ red\ parameter\ of\ the\ background\ colour\r\n\ @param\ bgG\ \ \ \ \ \ \ green\ parameter\ of\ the\ background\ colour\r\n\ @param\ bgB\ \ \ \ \ \ \ blue\ parameter\ of\ the\ background\ colour\r\n\ @param\ txtR\ \ \ \ \ \ red\ parameter\ of\ the\ text\ colour\r\n\ @param\ txtG\ \ \ \ \ \ green\ parameter\ of\ the\ text\ colour\r\n\ @param\ txtB\ \ \ \ \ \ blue\ parameter\ of\ the\ text\ colour\r\n\ @param\ fontSize\ \ the\ font\ size\ of\ the\ text\r\n\ @param\ Font\ \ \ \ \ \ the\ specified\ font\ of\ the\ text\ box\r\n\ @param\ centered\ \ whether\ the\ text\ is\ center\ aligned\r\n
comment7.params=width\ height\ bgR\ bgG\ bgB\ txtR\ txtG\ txtB\ fontSize\ font\ centered\ startText
comment7.target=TextBox(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ java.lang.String,\ boolean,\ java.lang.String)
comment7.text=\r\n\ The\ most\ detailed\ constructor,\ adding\ the\ ability\ to\ initialize\ initial\ text,\ as\ well\ as\ incorporating\ \r\n\ all\ the\ other\ parameters.\ \r\n\ <p>\r\n\ Note\:\ Make\ sure\ that\ the\ background\ colour\ complements\ the\ text\ colour\r\n\ <p>\r\n\ Note\:\ Use\ this\ constructor\ sparingly,\ as\ centering\ text\ is\ very\ CPU\ intensive.\ \r\n\ @param\ width\ \ \ \ \ the\ width\ of\ the\ text\ box\r\n\ @param\ height\ \ \ \ the\ height\ of\ the\ text\ box\r\n\ @param\ bgR\ \ \ \ \ \ \ red\ parameter\ of\ the\ background\ colour\r\n\ @param\ bgG\ \ \ \ \ \ \ green\ parameter\ of\ the\ background\ colour\r\n\ @param\ bgB\ \ \ \ \ \ \ blue\ parameter\ of\ the\ background\ colour\r\n\ @param\ txtR\ \ \ \ \ \ red\ parameter\ of\ the\ text\ colour\r\n\ @param\ txtG\ \ \ \ \ \ green\ parameter\ of\ the\ text\ colour\r\n\ @param\ txtB\ \ \ \ \ \ blue\ parameter\ of\ the\ text\ colour\r\n\ @param\ fontSize\ \ the\ font\ size\ of\ the\ text\r\n\ @param\ Font\ \ \ \ \ \ the\ specified\ font\ type\ of\ the\ text\ box\r\n\ @param\ centered\ \ whether\ the\ text\ is\ center\ aligned\r\n\ @param\ startText\ the\ initial\ text\ for\ the\ text\ box\r\n
comment8.params=
comment8.target=void\ display()
comment8.text=\r\n\ Displays\ text\ to\ the\ screen,\ assuming\ that\ text\ has\ changed\r\n
comment9.params=
comment9.target=void\ update()
comment9.text=\r\n\ Updates\ the\ current\ output\ immediately\ to\ match\ the\ entire\ output\ text.\ \r\n\ Make\ sure\ that\ this\ is\ not\ more\ than\ maxLines,\ as\ some\ lines\ may\ be\ cut\ out\ if\ it\ exceeds\ the\ size\ of\ the\ window\r\n
numComments=26
